#
# Copyright contributors to the Galasa project 
#
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: webapp-image-build
spec:
  workspaces:
  - name: git-workspace
    mountPath: /workspace/git
  params:
  - name: distBranch
    type: string
  - name: mavenCentralRepo
    type: string
    default: {{ .Values.mavenProxy }}
  - name: managersSourceRepo
    type: string
    default: {{ .Values.mavenProxy }}
  - name: dockerRepo
    type: string
    default: {{ .Values.dockerRegistry }}
  - name: noPush
    type: string
    default: ""
  steps:
  - name: get-commit
    workingDir: /workspace/git/simplatform
    image: $(params.dockerRepo)/galasadev/galasa-build
    script: |
      #!/bin/sh
      set +e
      COMMIT="$(git log --format="%H" -n 1)"
      echo $COMMIT > /workspace/git/simplatform/docker/simplatform.githash
      echo commit is $COMMIT
  - name: gradle-build-simplatform
    workingDir: /workspace/git/simplatform/galasa-simplatform-application
    image: $(params.dockerRepo)/galasadev/galasa-build
    command:
    - mvn
    - -Dgpg.skip=true
    - -Dgalasa.release.repo=file:/workspace/git/simplatform/docker/repo
    - -Dgalasa.source.repo=$(params.managersSourceRepo)
    - -Dgalasa.central.repo=$(params.mavenCentralRepo)
    - --settings
    - /workspace/git/simplatform/settings.xml
    - -B
    - -e
    - -fae
    - deploy
  - name: build-and-push-webapp-image
    workingDir: /workspace/git/simplatform/galasa-simplatform-application/galasa-simplatform-webapp
    image: $(params.dockerRepo)/common/kaniko-project/executor:latest
    env:
    - name: DOCKER_CONFIG
      value: /tekton/creds/.docker
    command:
    - /kaniko/executor
    # build
    - --dockerfile=./Dockerfile # path to Dockerfile (from workingDir)
    - --context=/workspace/git/simplatform/galasa-simplatform-application/galasa-simplatform-webapp # directory containing Dockerfile which kaniko will use to build image
    
    # push
    - --no-push
    - --destination=$(params.dockerRepo)/galasadev/galasa-simplatform-application/simbank-webapp:$(params.distBranch) # where to push the image - should be ICR?
    #- --oci-layout-path=/workspace/git-simplatform/docker/image-digest # directory where oci image layout. used to track image built
    #- --skip-tls-verify  # skip tls certificate validation when pushing
    #- --skip-tls-verify-pull  # skip tls certificate validation when pulling
    #- --single-snapshot # takes single snapshot of filesystem at end of build
    #- --verbosity=info  # error logging?



    
    #- $(params.noPush) # ?
    #- --build-arg=dockerRepository=$(params.dockerRepo) # pass in docker repo at build time?
    #- --build-arg=jdkImage=dockerhub/library/openjdk:11-jdk  # pass in java 11 at build time?